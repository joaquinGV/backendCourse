paths:
  # GET /api/products
  /api/products:
    get:
      summary: Obtener listado de productos
      tags:
        - Products
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Listado de productos obtenido exitosamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Products"
        "500":
          description: Error interno del servidor.
    # POST /api/products
    post:
      summary: Añadir un producto
      tags:
        - Products
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/postProduct"
      responses:
        "201":
          description: Producto añadido exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        "400":
          description: Error del cliente debido a falta de información en el requestBody.
        "500":
          description: Error interno del servidor.

  # GET /api/products/:pid
  /api/products/{pid}:
    get:
      summary: Obtener un producto por su ID
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto a buscar.
          schema:
            type: string
      responses:
        "200":
          description: Producto encontrado exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        "500":
          description: Error interno del servidor.

    # PUT /api/products/:pid
    put:
      summary: Actualizar un producto por su ID
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto a actualizar.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/postProduct"
      responses:
        "200":
          description: Producto actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        "400":
          description: Error del cliente debido a falta de información en el requestBody.
        "401":
          description: No tienes permisos para modificar este producto.
        "500":
          description: Error interno del servidor.
    # DELETE /api/products/:pid
    delete:
      summary: Eliminar un producto por su ID
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto a eliminar.
          schema:
            type: string
      responses:
        "200":
          description: Producto eliminado exitosamente.
          content:
            application/json:
              schema:
                type: object
        "401":
          description: No tienes permisos para eliminar este producto.
        "500":
          description: Error interno del servidor.

components:
  schemas:
    Products:
      type: object
      properties:
        _id:
          type: string
          description: ID autogenerado por MongoDB Atlas, es el ID del producto.
        title:
          type: string
          description: Título del producto.
        description:
          type: string
          description: Descripción del producto.
        code:
          type: string
          description: Código único del producto.
        price:
          type: number
          description: Precio del producto.
        status:
          type: boolean
          description: Estado de disponibilidad del producto.
        stock:
          type: integer
          description: Cantidad de productos disponibles.
        category:
          type: string
          description: Categoría a la que pertenece el producto.
        owner:
          type: string
          description: Email del propietario que creó el producto.
        thumbnails:
          type: array
          description: Array de URLs de imágenes del producto.
          items:
            type: string
      example:
        _id: ObjectId('65b09d8519a5ca2ea30b4425')
        title: Producto
        description: Descripción
        code: A1234
        price: 150
        status: true
        stock: 15
        owner: joaquin@gmail.com
        category: Electrónico
        thumbnails: ["http:example.com"]

  requestBodies:
    postProduct:
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                description: Título del producto.
              description:
                type: string
                description: Descripción del producto.
              code:
                type: string
                description: Código único del producto.
              price:
                type: number
                description: Precio del producto.
              status:
                type: boolean
                description: Estado de disponibilidad del producto.
              stock:
                type: number
                description: Cantidad de productos disponibles.
              category:
                type: string
                description: Categoría a la que pertenece el producto.
              thumbnails:
                type: array
                description: Array de URLs de imágenes del producto.
                items:
                  type: string
      example:
        title: Producto
        description: Descripción
        code: A1234
        price: 150
        status: true
        stock: 15
        category: Electrónico
        thumbnails: ["http:example.com"]

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
